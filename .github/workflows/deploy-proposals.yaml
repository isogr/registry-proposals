name: deploy-proposals

on:
  schedule:
    - cron: '42 */12 * * *'
  push:
    branches: [ master ]
    paths-ignore:
      - '.github/workflows/*'
      - '!.github/workflows/deploy-proposals.yaml'
  repository_dispatch:
    types: [ deploy-proposals ]
  workflow_dispatch:

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://geodetic-proposals.isotc211.org
    steps:
      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
      - uses: actions/checkout@master
        with:
          repository: 'isogr/registry'
          fetch-depth: 1
          ref: master
      - name: Build
        run: |
          if [[ -d gr-registry/_web ]]
          then
            echo "{\"gaMeasurementId\":\"${GA_MEASUREMENT_ID}\"}" > "${DATASET_NAME}"/_web/resources/js/ga.json

            # FIXME: Must specify --datadir *after* --injected-entries, or else
            # it would complain about `Invalid subcommand for build - use 'watch'`
            npx @paneron/site-builder@0.0.44 \
              --forusername "${PANERON_USER}" \
              --outdir "${OUTDIR}" \
              --injected-entries "${DATASET_NAME}"/_web/ga.js \
              --injected-assets-dir "${DATASET_NAME}"/_web/resources \
              --datadir "${DATASET_NAME}"
          else
            echo >&2 "Fallback to older version (0.0.43) of site-builder"
            npx @paneron/site-builder@0.0.43 \
              --forusername "${PANERON_USER}" \
              --outdir "${OUTDIR}" \
              --datadir "${DATASET_NAME}"
          fi
        env:
          GA_MEASUREMENT_ID: ${{ vars.GA_MEASUREMENT_ID }}
          PANERON_USER: maccraymer
          DATASET_NAME: gr-registry
          OUTDIR: dist
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist
  deploy:
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
